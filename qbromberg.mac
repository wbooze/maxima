/************************************************************************
    qbromberg.mac is a software file which accompanies Chapter 9 of
    Maxima by Example, Bigfloats and Arbitrary Precision Quadrature.
    
    Copyright (C) 2008,2009  
    Edwin L Woollett,  woollett@charter.net
    http://www.csulb.edu/~woollett
    
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU GENERAL PUBLIC LICENSE, Version 2, June 1991,
    as published by the Free Software Foundation.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details. You should have received a
    copy of the GNU General Public License along with this program.
    If not, see http://www.fsf.org/licensing/.
************************************************************************/


/* qbromberg.mac 
    functions:
    qbromberg(%f,a,b,rprec,fp, itmax ),
    qbrlist(%f,a,b,rplist,fp,itmax) 
    fdf (%ff, %xx, %dfp)
  */  

disp("qbromberg(%f,a,b,rprec,fp,itmax)
          sets fpprec to fp,
          brombergit to itmax,
         sets brombergabs to 10^(-rprec),
         sets brombergtol to 0,
         calls bromberg to integrate f over [a,b].
         you must use load(brmbrg) to use this.")$


qbromberg(%f,a,b,rprec,fp, itmax ) :=
        block([brombergtol,brombergabs,brombergit,
                   fpprec:fp ],
          if rprec > fp then
           ( print(" rprec should be less than fp "),
              return(done) ),
          brombergabs : bfloat(10^(-rprec)),
          brombergtol : 0.0b0,
          brombergit : itmax,
          
     /*    display([brombergabs,fpprec,brombergtol,brombergit ]), */
     
          bromberg(%f(x),x,a,b) )$          


disp(" qbrlist(%f,a,b,rplist,fp,itmax) 
        assumes tval is globally defined
        computes bromberg integral with
        each rprec in rplist and computes
        error of result. ")$
        
        
qbrlist(%f,a,b,rplist,fp,itmax) :=
  block([fpprec:fp,fpprintprec,brombergtol,brombergabs,brombergit,val,verr,pr],
     if not listp(rplist) then (print("rplist # list"),return(done)),
     
     brombergtol : 0.0b0,
     brombergit : itmax,
     fpprintprec:8,
     print(" rprec   fpprec     val             verr "),
     print(" "),
     for pr in rplist do
      ( brombergabs : bfloat(10^(-pr)),
        val: bromberg(%f(x),x,a,b),
        verr: abs(val - tval),
        print("  ",pr,"   ",fp,"   ",val,"   ",verr) ) )$
        

        
disp(" fdf(f,x,dfp) finds the absolute value
       of the difference of f(x) at the current
     value of fpprec and at the value (fpprec+dfp),
     and returns [f(x), df(x)] ")$
     
fdf (%ff, %xx, %dfp) :=
   block([fv1,fv2,df],
    fv1:bfloat(%ff(bfloat(%xx))),
    block([fpprec:fpprec + %dfp ],
     fv2:  bfloat(%ff(bfloat(%xx))),
     df: abs(fv2 - fv1) ),
   [bfloat(fv2),bfloat(df)] )$     

