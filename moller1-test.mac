/* moller1-test.mac  
    3-13-11 */
    

  invar (D(p1,p1) = 0,
         D(p1,p2) = s/2,
         D(p1,p3) =  - t/2,
         D(p1,p4) =  - u/2,
         D(p2,p2) = 0,
         D(p2,p3) =  - u/2,
         D(p2,p4) =  - t/2,
         D(p3,p3) = 0,
         D(p3,p4) = s/2,
         D(p4,p4) = 0);
 done;
 
 M1n : factor (Con ( tr (p3,mu,p1,nu)*tr (p4,mu,p2,nu), mu,nu));
 8*(u^2+s^2);
 
 
 M2n : factor (Con ( tr (p4,mu,p1,nu)*tr (p3,mu,p2,nu), mu,nu));
 8*(t^2+s^2);
 M12n : factor ( tr (p3,mu,p1,nu,p4,mu,p2,nu));
 -8*s^2;
 M21n : factor ( tr (p4,mu,p1,nu,p3,mu,p2,nu));
 -8*s^2;
 MfiSQ : pullfac(M1n/t^2 + M2n/u^2 - M12n/(t*u) - M21n/(t*u),8);
 8*((u^2+s^2)/t^2+2*s^2/(t*u)+(t^2+s^2)/u^2);
 
 assume(p > 0,th >= 0,th <= %pi);
 [p > 0,th >= 0,th <= %pi];
 comp_def(p1(E,0,0,E),p2(E,0,0,-E),p3(E,E*sin(th),0,E*cos(th)),
                p4(E,-E*sin(th),0,-E*cos(th)));
 done;
 s_th:VP(p2+p1,p2+p1);
 4*E^2;
 t_th:factor(VP(p1-p3,p1-p3));
 2*(cos(th)-1)*E^2;
 u_th:factor(VP(p1-p4,p1-p4));
 -2*(cos(th)+1)*E^2;
 
 M1SQ:sub_stu(M1n/t^2);
 8*cos(th)^2/(cos(th)^2-2*cos(th)+1)+16*cos(th)/(cos(th)^2-2*cos(th)+1)
                                          +40/(cos(th)^2-2*cos(th)+1);
                                          
 M1SQ:factor(ratsimp(to_ao2(M1SQ,th)));
 8*(cos(th/2)^4+1)/sin(th/2)^4;
 
 M2SQ:sub_stu(M2n/u^2);
 8*cos(th)^2/(cos(th)^2+2*cos(th)+1)-16*cos(th)/(cos(th)^2+2*cos(th)+1)
                                          +40/(cos(th)^2+2*cos(th)+1);
                                          
 M2SQ:ratsimp(to_ao2(M2SQ,th));
 (8*cos(th/2)^4-16*cos(th/2)^2+16)/cos(th/2)^4; 
 
 M2SQ:factor(ratsubst(1-sin(th/2)^2,cos(th/2)^2,num(M2SQ)))/denom(M2SQ);
 8*(sin(th/2)^4+1)/cos(th/2)^4;
 
 M12INT:-2*sub_stu(M12n/(t*u));
 -64/(cos(th)^2-1);
 
  M12INT:factor(M12INT);
 -64/((cos(th)-1)*(cos(th)+1));
 
 M12INT:subst([cos(th)-1 = -2*sin(th/2)^2,1+cos(th) = 2*cos(th/2)^2],
                    M12INT);
 16/(cos(th/2)^2*sin(th/2)^2);
 
 MfiSQ:pullfac(M12INT+M2SQ+M1SQ,8);
 8*((sin(th/2)^4+1)/cos(th/2)^4+2/(cos(th/2)^2*sin(th/2)^2)
                                     +(cos(th/2)^4+1)/sin(th/2)^4);
                                     
 MfiSQ:fr_ao2(MfiSQ,th);
 16*cos(th)^4/sin(th)^4+96*cos(th)^2/sin(th)^4+144/sin(th)^4;
 
 MfiSQ:factor(ratsimp(MfiSQ));
 16*(cos(th)^2+3)^2/sin(th)^4;
 
 /* spinor methods */
 /* first an example for helicity case (1,1) --> (1,1) */
 
 (up1:UU(E,E,0,0,1),up3b:sbar(UU(E,E,th,0,1)),up2:UU(E,E,%pi,0,1),
        up4b:sbar(UU(E,E,%pi-th,%pi,1)),
        Mt:(a13:up3b . Gam[mu] . up1,a24:up4b . Gam[mu] . up2,mcon(a13*a24,mu),
           trigsimp(%%)));
 -8*E^2;
 
 Mu:(a14:up4b . Gam[mu] . up1,a23:up3b . Gam[mu] . up2,mcon(a14*a23,mu),
           trigsimp(%%));
 8*E^2;
 
 Mfi:Mt/t-Mu/u;
 -8*E^2/u-8*E^2/t;
 
 Mfi:sub_stu(Mfi);
 -8/(cos(th)^2-1);
 
 Mfi_RR_RR:ts(Mfi,th);
 8/sin(th)^2;
 
 ( he_me(sp1v,sp2v,sp3v,sp4v):=block([up1,up2,up3b,up4b,_mu%,Mt,Mu,temp],
             up1:UU(E,E,0,0,sp1v),up3b:sbar(UU(E,E,th,0,sp3v)),
             up2:UU(E,E,%pi,0,sp2v),up4b:sbar(UU(E,E,%pi-th,%pi,sp4v)),
             a13:up3b . Gam[_mu%] . up1,a24:up4b . Gam[_mu%] . up2,
             Mt:(Con(a13*a24,_mu%),expand(trigsimp(%%)))/t,
             a14:up4b . Gam[_mu%] . up1,a23:up3b . Gam[_mu%] . up2,
             Mu:(Con(a14*a23,_mu%),expand(trigsimp(%%)))/u,temp:Mt-Mu,
             if temp # 0 then temp:pullfac(temp,-8*E^2),temp),
    he_me(1,1,1,1) );
    
  -8*(1/u+1/t)*E^2;
  
 sub_stu (%);
 -8/(cos(th)^2-1);
 ts (%,th);
 8/sin(th)^2;
 
 block([sL,s1,s2,s3,s4,temp],sL:[1,-1],mssq:0,
              for s1 in sL do
                  for s2 in sL do
                      for s3 in sL do
                          for s4 in sL do
                              (temp:expand(he_me(s1,s2,s3,s4)/(8*E^2)),
                               mssq:Avsq(temp)+mssq),
              mssq:expand(fr_ao2(mssq,th)));
              
  4/(t*u)+cos(th)^2/(2*u^2)-cos(th)/u^2+5/(2*u^2)+cos(th)^2/(2*t^2)
              +cos(th)/t^2+5/(2*t^2);
              
 mssq:sub_stu(mssq);
 cos(th)^4/(4*sin(th)^4*E^4)+3*cos(th)^2/(2*sin(th)^4*E^4)
                                  +9/(4*sin(th)^4*E^4);
                                  
 mssq:factor(ratsimp(mssq));
 (cos(th)^2+3)^2/(4*sin(th)^4*E^4);
 
 mssq:64*E^4*mssq;
 16*(cos(th)^2+3)^2/sin(th)^4;
 
 /* last section of moller1.mac uses symbolic methods to
    find the square of polarized amplitudes  */
    
 
    
 M1n : (econ (nc_tr(S(1),p3,mu,S(1),p1,nu)
                  *nc_tr(S(1),p4,mu,S(1),p2,nu),mu,nu),
                trigsimp (%%), expand (%%));
 64*E^4-8*t*cos(th)*E^2+8*t*E^2+4*t^2;
 M2n : (econ (nc_tr (S(1),p4,mu,S(1),p1,nu)
                  *nc_tr (S(1),p3,mu,S(1),p2,nu),mu,nu),
               trigsimp (%%), expand (%%));
 64*E^4+8*cos(th)*u*E^2+8*u*E^2+4*u^2;
 
 M12n:tr(S(1),p3,mu,S(1),p1,nu,S(1),p4,mu,S(1),p2,nu);
 -4*s^2;
 
 M21n:tr(S(1),p4,mu,S(1),p1,nu,S(1),p3,mu,S(1),p2,nu);
 -4*s^2;
 
 MfiSQ:(-M21n)/(t*u)+(-M12n)/(t*u)+M2n/u^2+M1n/t^2;
 (64*E^4+8*cos(th)*u*E^2+8*u*E^2+4*u^2)/u^2
       +(64*E^4-8*t*cos(th)*E^2+8*t*E^2+4*t^2)/t^2+8*s^2/(t*u);
 MfiSQ:sub_stu(MfiSQ);
 64/sin(th)^4;
 
 
 
 